
<project name="AntJavaProject" default="main" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
	<description>
		Create a Java Project (JAR) with Ant build script
	</description>

	<property name="projectName" value="DateUtils" />

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="C:\\WS02\\scpo\\vendor\\jacoco\\jacocoant.jar" />
	</taskdef>

	<!-- Java sources -->
	<property name="src.dir" location="src" />
	<property name="test.dir" location="test" />
	<!-- Java classes -->
	<property name="build.dir" location="bin" />

	<!-- Output, Jar -->
	<property name="dist.dir" location="dist" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build.dir}" />
		<delete dir="${dist.dir}/jacoco" />
		<mkdir dir="fulfillment" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src.dir} into ${build.dir} -->
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${build.dir}" debug="true">
			<classpath location="C:/WS02/scpo/tomcat/config/lib/vendor/junit.jar" />
			<classpath location="C:/WS02/scpo/tomcat/config/lib/vendor/hamcrest-core-1.1.jar" />
		</javac>
		<javac includeantruntime="false" srcdir="${test.dir}" destdir="${build.dir}" debug="true">
			<classpath location="C:/WS02/scpo/tomcat/config/lib/vendor/junit.jar" />
			<classpath location="C:/WS02/scpo/tomcat/config/lib/vendor/hamcrest-core-1.1.jar" />
		</javac>
	</target>

	<target name="dist" depends="compile" description="package, output to JAR">

		<!-- Create the distribution directory -->
		<mkdir dir="${dist.dir}" />

		<!-- Put everything in ${build} into the {$projectName}-${DSTAMP}.jar file -->
		<jar jarfile="${dist.dir}/${projectName}-${DSTAMP}.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Main-Class" value="com.mkyong.core.utils.DateUtils" />
			</manifest>
		</jar>
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="fulfillment" />
	</target>

	<!-- Default, run this -->
	<target name="main" depends="clean, compile, dist, test, report" />

	<target name="test" depends="compile">
		<jacoco:coverage destfile="${dist.dir}/jacoco.exec">
			<junit fork="true" forkmode="once">
				<batchtest todir="fulfillment">
					<fileset dir="${test.dir}">
						<include name="**/**/UT**" />
					</fileset>
				</batchtest>
				<classpath>
					<pathelement location="./bin" />
				</classpath>
				<classpath location="C:/WS02/scpo/tomcat/config/lib/vendor/junit.jar" />
				<classpath location="C:/WS02/scpo/tomcat/config/lib/vendor/hamcrest-core-1.1.jar" />

			</junit>
		</jacoco:coverage>
	</target>

	<target name="report" depends="test">
		<mkdir dir="jacoco" />
		<!--  Step 3: Create coverage report  -->
		<jacoco:report>
			<!--  This task needs the collected execution data and ...  -->
			<executiondata>
				<file file="${dist.dir}/jacoco.exec" />
			</executiondata>
			<!--  the class files and optional source files ...  -->
			<structure name="JaCoCo Ant Example">
				<classfiles>
					<fileset dir="${build.dir}" >
						<exclude name="**/UT**"/>
					</fileset>
				</classfiles>
				<sourcefiles>
					<fileset dir="src"/>
				</sourcefiles>
			</structure>
			<!--  to produce reports in different formats.  -->
			<html destdir="jacoco" />
			<csv destfile="jacoco/report.csv" />
			<xml destfile="jacoco/report.xml" />
		</jacoco:report>
	</target>
</project>